#!/bin/bash

# Функция логгирования действий скрипта.
#=====================================
logging(){
# Проверка наличия файла log.txt в домашней директории текущего пользователя.
logfile=~/log.txt
if [ -e $logfile ]
then
echo ""
else
> $logfile
echo [$(date '+%Y-%m-%d %H:%M:%S')] "Файл 'log' создан в домашней директории текущего пользователя."
fi
# Передача сообщения в консоль и файл log.txt.
echo [$(date '+%Y-%m-%d %H:%M:%S')] $1
echo [$(date '+%Y-%m-%d %H:%M:%S')] $1 >> $logfile
}

#=====================================

# Переход в домашнюю директорию.
cd
# Создание файла с именем, переданным первым параметром скрипта.
> $1
# Вызов функции логгирования.
logging "Файл $1 создан в домашней директории текущего пользователя."
# Создание директории, переданной вторым параметром скрипта (если она отсутствует).
mkdir -p $2
# Цикл с тремя итерациями. Каждая копирует файл в указанную директорию, изменяет имя, ограничивает права доступа и вызывает функцию логгирования.
for (( COUNT=1; COUNT<=3 ; COUNT++ ))
do
cp ~/$1 ~/$2/$COUNT"_"$1 
chmod ugo-rwx ~/$2/$COUNT"_"$1 && chmod u+rw ~/$2/$COUNT"_"$1
logging "Файл $1 скопирован в директорию $2 с именем $COUNT"_"$1. Права доступа ограничены."
done
# Переход в директорию с копиями.
cd ~/$2
# Архивация и сжатие копий. Архив помещается в домашнюю директорию.
tar -cf - * | xz -9 -c - > ~/$1-$(date +%Y-%m-%d).tar.xz
# Вызов функции логгирования.
logging "Копии файла $1 заархивированы. Архив размещен в домашней директории текущего пользователя."
